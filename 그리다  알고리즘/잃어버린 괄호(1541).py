#잃어버린 괄호 1541
"""https://www.acmicpc.net/problem/1541"""
# 1. 이 문제는 -와 - 사이의 수를 전부 괄호를 치면 되는 문제입니다.
# 2. 그럼 split() 함수를 사용하여 - 사이를 전부 끊어주면 된다.

n = str(input())# 주어진 수식을 입력받습니다.
m = n.split('-')# '-'를 기준으로 수식을 분리합니다.
result = 0# 최종 결과를 저장할 변수를 초기화합니다.
# 첫번째 수식을 계산합니다.('-'로 시작하는 경우도 고려하여 따로 처리합니다.)
x = sum(map(int, (m[0].split('+'))))# 주어진 문자열 m을 '+'를 기준으로 분리하고, 각 숫자를 int로 변환한 후 합을 계산하여 x에 저장합니다.
if n[0] == '-': # 만약 주어진 문자열 n의 첫 번째 문자가 '-'라면:
    result -= x
else:
    result += x
# 이미 첫번째 수식은 계산했으므로, 두 번째 수식부터 반복문을 사용합니다.
for x in m[1:]:
    x = sum(map(int, (x.split('+')))) # 현재 원소인 x를 '+'를 기준으로 분리하고, 각각의 숫자들을 더하여 x에 저장합니다.
    result -= x# 더한 값을 최종 결과에서 빼줍니다.
print(result)





#--------------------------------------------------------------
#위코드를 함축하면 이런식으로도 표현할 수 있다.
n=[sum([int(i) for i in s.split("+")]) for s in input().split("-")]
print(-1*(sum(n)-2*n[0]))












#--------------------------------------------------------------

# 1. 입력 문자열을 받아서 '-'를 기준으로 부분 수식들을 분리하고, 각 부분 수식을 계산하여 결과를 리스트 n에 저장합니다.
n = [sum([int(i) for i in s.split("+")]) for s in input().split("-")]

# 2. 리스트 n의 모든 값을 더하고, 첫 번째 원소인 2*n[0]의 두 배를 뺀 결과를 얻습니다.
result = sum(n) - 2 * n[0]

# 3. 최종 결과값에 -1을 곱해서 출력합니다.
print(-1 * result)
