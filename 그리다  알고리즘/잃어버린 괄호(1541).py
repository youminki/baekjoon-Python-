#잃어버린 괄호 1541
# 1. 이 문제는 -와 - 사이의 수를 전부 괄호를 치면 되는 문제입니다.
# 2. 그럼 split() 함수를 사용하여 - 사이를 전부 끊어주면 된다.

n = str(input())# 주어진 수식을 입력받습니다.
m = n.split('-')# '-'를 기준으로 수식을 분리합니다.
answer = 0# 최종 결과를 저장할 변수를 초기화합니다.
# 첫번째 수식을 계산합니다.

x = sum(map(int, (m[0].split('+'))))
if n[0] == '-':
    answer -= x
else:
    answer += x
# 나머지 수식들을 계산합니다.
# 이미 첫번째 수식은 계산했으므로, 두 번째 수식부터 반복문을 사용합니다.
for x in m[1:]:
    x = sum(map(int, (x.split('+'))))# '+'를 기준으로 수식을 분리하고, 각각의 숫자들을 더합니다.
    answer -= x# 더한 값을 최종 결과에서 빼줍니다.
print(answer)

#--------------------------------------------------------------
n = input().split('-') #입력받는 값에서  '-'를 기준으로 split해서 n 리스트에 저장(ex [55-50+40] -> [55, 50+40])

sum = [] #'-'로 나눈 항들의 합을 저장할 리스트

for i in n: # list n의 0번째 원소는 맨 처음 숫자부터 연산자 '-'가 나오기 전까지의 숫자들로 구성되어 있으므로, 해당 인덱스에 있는 숫자들은 모두 더 해줘야 한다
    sum = 0
    tmp = i.split('+') #덧셈을 하기 위해서 '+'를 기준으로 split
    for j in tmp: #split한 리스트의 각 요소들을 더해줌
        sum += int(j) # 해당 인덱스에 있는 숫자들은 모두 더 해줘야 한다
    sum.append(sum) #각 항의 연산 결과(덧셈)를 sum에 저장

n = sum[0] #식의 제일 처음은 숫자로 시작하기 때문에 0번째 값에서 나머지 값들을 빼준다

for i in range(1,len(sum)): #1번째 값부터 n에서 빼준다
    n -= sum[i]
print(n)
#--------------------------------------------------------------

n=[sum([int(i) for i in s.split("+")]) for s in input().split("-")]
print(-1*(sum(n)-2*n[0]))
